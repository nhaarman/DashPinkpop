language: java
jdk: oraclejdk7

env:
  matrix:
    - ANDROID_SDKS=sysimg-17 ANDROID_TARGET=android-17  ANDROID_ABI=armeabi-v7a
    - ANDROID_SDKS=sysimg-18 ANDROID_TARGET=android-18  ANDROID_ABI=armeabi-v7a
    - ANDROID_SDKS=sysimg-19 ANDROID_TARGET=android-19  ANDROID_ABI=armeabi-v7a
  global:
    - GRADLE_VERSION=1.11
before_install:

  # Install base Android SDK
  # 
  - sudo chmod +x gradlew
  - sudo apt-get update -qq
  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch > /dev/null; fi
  - wget http://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip
  - unzip -qq gradle-$GRADLE_VERSION-bin.zip
# Having GRADLE_HOME property will make Travis CI use it for build
  - export GRADLE_HOME=$PWD/gradle-$GRADLE_VERSION
  - export PATH=$GRADLE_HOME/bin:$PATH
  - wget http://dl.google.com/android/android-sdk_r22.3-linux.tgz
  - tar xzf android-sdk_r22.3-linux.tgz
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools

  # Install required components.
  - echo yes | android update sdk --all --filter platform-tools --no-ui --force > /dev/null
  - echo yes | android update sdk --all --filter build-tools-19.0.3 --no-ui --force > /dev/null
  - echo yes | android update sdk --all --filter android-19 --no-ui --force > /dev/null
  - echo yes | android update sdk --all --filter $ANDROID_TARGET --no-ui --force > /dev/null
  - echo yes | android update sdk --all --filter $ANDROID_SDKS --no-ui --force > /dev/null
  - echo yes | android update sdk --all --filter extra-android-support --no-ui --force > /dev/null
  - echo yes | android update sdk --all --filter extra-android-m2repository --no-ui --force > /dev/null

  # Add dummy passwords
  - echo nhaarman_dashpinkpop_storePassword=dummy >> gradle.properties
  - echo nhaarman_dashpinkpop_keyAlias=dummy >> gradle.properties
  - echo nhaarman_dashpinkpop_keyPassword=dummy >> gradle.properties
  
  # Create and start emulator
  - android list targets
  - echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
  - emulator -avd test -no-skin -no-audio -no-window &
  
before_script:
  # Make sure the emulator has started before running tests
  # - adb wait-for-device
  - chmod +x wait_for_emulator
  - ./wait_for_emulator
  
install:
  - true
script:
  - TERM=dumb ./gradlew connectedCheck
  - TERM=dumb ./gradlew lint